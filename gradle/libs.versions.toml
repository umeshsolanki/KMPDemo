[versions]
androidx-lifecycle = "2.8.4"
compose-multiplatform = "1.7.3"
junit = "4.13.2"
kotlin = "2.1.20"
ktor = "3.1.2"
logback = "1.5.17"
hikaricpversion = "5.0.1"
ehcacheversion = "3.10.8"
kotlincssversion = "1.0.0-pre.625"
htmlversion = "0.12.0"
coroutineversion = "1.8.1"
kotlinx-json-serialization = "1.6.3"
mongodbdriver = "5.4.0"
kotlin-serialization-plugin = "2.0.0"
gson = "2.10.1"
ksp = "2.1.20-1.0.32"
#ksp = "2.1.20-1.0.29"
slf4j = "1.7.36"
jsoup = "1.19.1"
#hibernate = "5.6.14.Final"
exposed = "0.60.0"
mysql-connector = "8.0.33"
kotlinx-datetime = "0.6.2"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }


junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutineversion" }
kotlinx-json-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-json-serialization" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
ktor-server-html-builder = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-double-receive = { module = "io.ktor:ktor-server-double-receive", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-json-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-clientjs = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version.ref = "htmlversion" }
kotlin-css = { module = "org.jetbrains.kotlin-wrappers:kotlin-css", version.ref = "kotlincssversion" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-log4j12", version.ref = "slf4j" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

mongo-driversync = { module = "org.mongodb:mongodb-driver-sync", version.ref = "mongodbdriver" }
mongo-coroutine = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodbdriver" }
mongo-bson-kotlin = { module = "org.mongodb:bson-kotlinx", version.ref = "mongodbdriver" }
mysql-connector = { module = "mysql:mysql-connector-java", version.ref = "mysql-connector" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricpversion" }
ehcache = { module = "org.ehcache:ehcache", version.ref = "ehcacheversion" }
#hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
[bundles]
#ktorBundle = ["ktor-server-core", "ktor-server-netty", "ktor-server-html-builder", "ktor-server-content-negotiation",
#    "ktor-server-websockets", "ktor-server-double-receive", "ktor-client-encoding", "ktor-client-core",
#    "ktor-client-cio", "ktor-server-cors"]

ktor-client-bundle = ["ktor-client-encoding", "ktor-client-core", "ktor-client-cio", "ktor-client-serialization"]

ktorserverbundle = ["ktor-server-core", "ktor-server-netty", "ktor-server-html-builder",
    "ktor-server-content-negotiation", "ktor-json-serialization",
    "ktor-server-websockets", "ktor-server-double-receive", "ktor-server-cors", "kotlinx-html", "kotlin-css",
    "coroutine-core", "slf4j-api", "logback"]

mongoBundle = ["mongo-driversync", "mongo-coroutine", "mongo-bson-kotlin"]

allDb = ["mongo-driversync", "mongo-coroutine", "mongo-bson-kotlin", "mysql-connector", "ehcache",
    "exposed-core", "exposed-jdbc", "exposed-dao", "exposed-json", "exposed-kotlin-datetime", "hikaricp"]

commonMain = ["kotlin-stdlib", "kotlinx-json-serialization", "coroutine-core", "ktor-client-serialization",
    "ktor-client-encoding", "ktor-client-core", "ktor-client-cio","kotlinx-datetime"]

jvmMain = ["kotlin-stdlib", "kotlinx-json-serialization", "ktor-server-core", "ktor-server-netty",
    "ktor-server-html-builder", "ktor-server-content-negotiation", "ktor-server-websockets",
    "ktor-server-double-receive", "ktor-client-encoding", "ktor-client-core", "ktor-client-cio", "logback"]
jsMain = ["kotlin-stdlib", "kotlinx-json-serialization", "ktor-server-html-builder", "ktor-client-encoding",
    "ktor-client-core","ktor-client-content-negotiation", "ktor-client-cio","ktor-json-serialization"]

[plugins]
#composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
#composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-serialization-plugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
application = { id = "application" }
distribution = { id = "distribution" }